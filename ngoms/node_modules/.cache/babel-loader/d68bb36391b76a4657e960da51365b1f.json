{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\GRIND\\\\NGO Management System\\\\ngoms\\\\src\\\\components\\\\Button.js\";\nimport React from \"react\";\nimport './componentscss/Button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLES = ['btn--primary', 'btn--outline'];\nconst SIZES = ['btn==medium', 'btn--large', 'btn--mobile', 'btn---wide'];\nconst COLOR = ['primary', 'blue', 'red', 'green'];\nexport const Button = _ref => {\n  let {\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize,\n    buttonColor\n  } = _ref;\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = STYLES.includes(buttonSize) ? buttonSize : SIZES[0];\n  const checkButtonColor = STYLES.includes(buttonColor) ? buttonSize : COLOR[0];\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `btn ${checkButtonStyle}\n         $ {checkButtonSize} $(checkButtonColor)`,\n    onClick: onClick,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","STYLES","SIZES","COLOR","Button","children","type","onClick","buttonStyle","buttonSize","buttonColor","checkButtonStyle","includes","checkButtonSize","checkButtonColor"],"sources":["D:/Desktop/GRIND/NGO Management System/ngoms/src/components/Button.js"],"sourcesContent":["import React from \"react\";\r\nimport './componentscss/Button.css';\r\n\r\n\r\nconst STYLES = ['btn--primary', 'btn--outline'];\r\n\r\nconst SIZES = ['btn==medium', 'btn--large', 'btn--mobile', 'btn---wide']\r\n\r\nconst COLOR = ['primary', 'blue', 'red', 'green']\r\n\r\nexport const Button = ({\r\n children, \r\n type, \r\n onClick, \r\n buttonStyle, \r\n buttonSize, \r\n buttonColor\r\n}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ?\r\n    buttonStyle : STYLES[0]\r\n\r\n    const checkButtonSize = STYLES.includes(buttonSize) ?\r\n    buttonSize : SIZES[0]\r\n\r\n    const checkButtonColor = STYLES.includes(buttonColor) ?\r\n    buttonSize : COLOR[0]\r\n\r\n    return (    \r\n        <button className={`btn ${checkButtonStyle}\r\n         $ {checkButtonSize} $(checkButtonColor)`} onClick={onClick}>\r\n        {children}</button>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP;;AAGA,MAAMC,MAAM,GAAG,CAAC,cAAD,EAAiB,cAAjB,CAAf;AAEA,MAAMC,KAAK,GAAG,CAAC,aAAD,EAAgB,YAAhB,EAA8B,aAA9B,EAA6C,YAA7C,CAAd;AAEA,MAAMC,KAAK,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,KAApB,EAA2B,OAA3B,CAAd;AAEA,OAAO,MAAMC,MAAM,GAAG,QAOhB;EAAA,IAPiB;IACtBC,QADsB;IAEtBC,IAFsB;IAGtBC,OAHsB;IAItBC,WAJsB;IAKtBC,UALsB;IAMtBC;EANsB,CAOjB;EACF,MAAMC,gBAAgB,GAAGV,MAAM,CAACW,QAAP,CAAgBJ,WAAhB,IACzBA,WADyB,GACXP,MAAM,CAAC,CAAD,CADpB;EAGA,MAAMY,eAAe,GAAGZ,MAAM,CAACW,QAAP,CAAgBH,UAAhB,IACxBA,UADwB,GACXP,KAAK,CAAC,CAAD,CADlB;EAGA,MAAMY,gBAAgB,GAAGb,MAAM,CAACW,QAAP,CAAgBF,WAAhB,IACzBD,UADyB,GACZN,KAAK,CAAC,CAAD,CADlB;EAGA,oBACI;IAAQ,SAAS,EAAG,OAAMQ,gBAAiB;AACnD,iDADQ;IAC2C,OAAO,EAAEJ,OADpD;IAAA,UAECF;EAFD;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAtBM;KAAMD,M"},"metadata":{},"sourceType":"module"}